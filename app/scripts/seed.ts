
import { PrismaClient, PaymentStatus } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('🌱 Starting TreasuryStream database seed...')

  // Clear existing data
  await prisma.auditLog.deleteMany()
  await prisma.contractAllocation.deleteMany()
  await prisma.wirePayment.deleteMany()

  // Create comprehensive wire payment test data (25 records)
  const wirePayments = await prisma.wirePayment.createMany({
    data: [
      // Auto-cleared payments (5 records)
      {
        id: 'wp1',
        dba: 'TechCorp Solutions LLC',
        cid: 'TC-2024-001',
        expectedAmount: 15000.00,
        actualAmount: 15000.00,
        ptp: true,
        status: PaymentStatus.AUTO_CLEARED,
        notesForTreasury: 'Payment matched expectations, auto-cleared by system',
        expectedDate: new Date('2024-06-20'),
        actualDateReceived: new Date('2024-06-20T14:30:00'),
        processedBy: 'system_auto',
        autoCleared: true,
      },
      {
        id: 'wp2',
        dba: 'Manufacturing Industries Inc',
        cid: 'MF-2024-015',
        expectedAmount: 22000.00,
        actualAmount: 22000.00,
        ptp: true,
        status: PaymentStatus.AUTO_CLEARED,
        notesForTreasury: 'Large payment auto-cleared - amounts matched perfectly',
        expectedDate: new Date('2024-06-25'),
        actualDateReceived: new Date('2024-06-25T12:00:00'),
        processedBy: 'system_auto',
        autoCleared: true,
      },
      {
        id: 'wp3',
        dba: 'Digital Marketing Agency',
        cid: 'DM-2024-008',
        expectedAmount: 3750.00,
        actualAmount: 3750.00,
        ptp: true,
        status: PaymentStatus.AUTO_CLEARED,
        notesForTreasury: 'Small payment auto-processed',
        expectedDate: new Date('2024-06-28'),
        actualDateReceived: new Date('2024-06-28T09:15:00'),
        processedBy: 'system_auto',
        autoCleared: true,
      },
      {
        id: 'wp4',
        dba: 'Regional Insurance Group',
        cid: 'RI-2024-019',
        expectedAmount: 45000.00,
        actualAmount: 45000.00,
        ptp: true,
        status: PaymentStatus.AUTO_CLEARED,
        notesForTreasury: 'High-value payment auto-cleared',
        expectedDate: new Date('2024-06-30'),
        actualDateReceived: new Date('2024-06-30T16:20:00'),
        processedBy: 'system_auto',
        autoCleared: true,
      },
      {
        id: 'wp5',
        dba: 'Cloud Services Provider',
        cid: 'CS-2024-022',
        expectedAmount: 8900.00,
        actualAmount: 8900.00,
        ptp: true,
        status: PaymentStatus.AUTO_CLEARED,
        notesForTreasury: 'Monthly subscription payment auto-processed',
        expectedDate: new Date('2024-07-01'),
        actualDateReceived: new Date('2024-07-01T08:30:00'),
        processedBy: 'system_auto',
        autoCleared: true,
      },

      // Manual posted payments (4 records)
      {
        id: 'wp6',
        dba: 'E-commerce Solutions Inc',
        cid: 'EC-2024-005',
        expectedAmount: 7200.00,
        actualAmount: 7200.00,
        ptp: true,
        status: PaymentStatus.MANUAL_POSTED,
        notesForTreasury: 'Manual posting completed after verification',
        expectedDate: new Date('2024-06-21'),
        actualDateReceived: new Date('2024-06-21T15:45:00'),
        processedBy: 'treasury_user_3',
        backendTransactionId: 'GL-1719002700000-ABC123DEF',
      },
      {
        id: 'wp7',
        dba: 'Restaurant Chain Holdings',
        cid: 'RC-2024-011',
        expectedAmount: 16500.00,
        actualAmount: 16500.00,
        ptp: false,
        status: PaymentStatus.MANUAL_POSTED,
        notesForTreasury: 'Franchise payment manually posted to multiple GL accounts',
        expectedDate: new Date('2024-06-26'),
        actualDateReceived: new Date('2024-06-26T11:30:00'),
        processedBy: 'treasury_user_1',
        backendTransactionId: 'GL-1719398200000-FRAN001XYZ',
      },
      {
        id: 'wp8',
        dba: 'Financial Services Corp',
        cid: 'FS-2024-017',
        expectedAmount: 31000.00,
        actualAmount: 31000.00,
        ptp: true,
        status: PaymentStatus.MANUAL_POSTED,
        notesForTreasury: 'Complex transaction requiring manual intervention',
        expectedDate: new Date('2024-06-29'),
        actualDateReceived: new Date('2024-06-29T14:15:00'),
        processedBy: 'treasury_supervisor_1',
        backendTransactionId: 'GL-1719672900000-COMPLEX789',
      },
      {
        id: 'wp9',
        dba: 'Healthcare Technology Ltd',
        cid: 'HT-2024-013',
        expectedAmount: 12800.00,
        actualAmount: 12800.00,
        ptp: true,
        status: PaymentStatus.MANUAL_POSTED,
        notesForTreasury: 'Medical equipment payment processed manually',
        expectedDate: new Date('2024-07-02'),
        actualDateReceived: new Date('2024-07-02T10:45:00'),
        processedBy: 'treasury_user_2',
        backendTransactionId: 'GL-1719918300000-MEDTECH456',
      },

      // Review required payments (5 records)
      {
        id: 'wp10',
        dba: 'Global Retail Inc',
        cid: null,
        expectedAmount: 0,
        actualAmount: 8500.75,
        ptp: false,
        status: PaymentStatus.REVIEW_REQUIRED,
        notesForTreasury: 'Unexpected payment received, requires manual posting',
        expectedDate: null,
        actualDateReceived: new Date('2024-06-21T09:15:00'),
        processedBy: null,
      },
      {
        id: 'wp11',
        dba: 'Construction Masters LLC',
        cid: null,
        expectedAmount: 0,
        actualAmount: 18750.00,
        ptp: false,
        status: PaymentStatus.REVIEW_REQUIRED,
        notesForTreasury: 'Large unexpected payment, needs investigation',
        expectedDate: null,
        actualDateReceived: new Date('2024-06-23T08:30:00'),
        processedBy: null,
      },
      {
        id: 'wp12',
        dba: 'Logistics Express LLC',
        cid: null,
        expectedAmount: 0,
        actualAmount: 5500.00,
        ptp: false,
        status: PaymentStatus.REVIEW_REQUIRED,
        notesForTreasury: 'Unknown payment source, investigating',
        expectedDate: null,
        actualDateReceived: new Date('2024-06-24T07:15:00'),
        processedBy: null,
      },
      {
        id: 'wp13',
        dba: 'International Trading Co',
        cid: null,
        expectedAmount: 0,
        actualAmount: 27350.00,
        ptp: false,
        status: PaymentStatus.REVIEW_REQUIRED,
        notesForTreasury: 'Foreign payment received, contract verification needed',
        expectedDate: null,
        actualDateReceived: new Date('2024-06-27T13:45:00'),
        processedBy: null,
      },
      {
        id: 'wp14',
        dba: 'Small Business Services',
        cid: null,
        expectedAmount: 0,
        actualAmount: 1250.00,
        ptp: false,
        status: PaymentStatus.REVIEW_REQUIRED,
        notesForTreasury: 'Small unexpected payment, verify merchant identity',
        expectedDate: null,
        actualDateReceived: new Date('2024-07-01T16:20:00'),
        processedBy: null,
      },

      // Uncleared payments (4 records)
      {
        id: 'wp15',
        dba: 'FastFood Chain LLC',
        cid: 'FF-2024-003',
        expectedAmount: 12000.00,
        actualAmount: 11950.00,
        ptp: false,
        status: PaymentStatus.UNCLEARED,
        notesForTreasury: 'Amount mismatch - $50 short, investigating',
        expectedDate: new Date('2024-06-19'),
        actualDateReceived: new Date('2024-06-19T16:45:00'),
        processedBy: 'treasury_user_2',
      },
      {
        id: 'wp16',
        dba: 'Professional Services Corp',
        cid: 'PS-2024-009',
        expectedAmount: 13500.00,
        actualAmount: 13600.00,
        ptp: false,
        status: PaymentStatus.UNCLEARED,
        notesForTreasury: 'Overpayment of $100, contacting merchant',
        expectedDate: new Date('2024-06-20'),
        actualDateReceived: new Date('2024-06-20T10:25:00'),
        processedBy: 'treasury_user_2',
      },
      {
        id: 'wp17',
        dba: 'Consulting Group LLC',
        cid: 'CG-2024-024',
        expectedAmount: 9750.00,
        actualAmount: 9250.00,
        ptp: true,
        status: PaymentStatus.UNCLEARED,
        notesForTreasury: 'Significant underpayment of $500, dispute initiated',
        expectedDate: new Date('2024-06-28'),
        actualDateReceived: new Date('2024-06-28T12:15:00'),
        processedBy: 'treasury_user_1',
      },
      {
        id: 'wp18',
        dba: 'Retail Electronics Store',
        cid: 'RE-2024-006',
        expectedAmount: 6800.00,
        actualAmount: 7100.00,
        ptp: false,
        status: PaymentStatus.UNCLEARED,
        notesForTreasury: 'Overpayment investigation ongoing',
        expectedDate: new Date('2024-06-30'),
        actualDateReceived: new Date('2024-06-30T14:30:00'),
        processedBy: 'treasury_user_3',
      },

      // Pending payments (3 records)
      {
        id: 'wp19',
        dba: 'Healthcare Partners Group',
        cid: 'HP-2024-007',
        expectedAmount: 25000.00,
        actualAmount: 25000.00,
        ptp: true,
        status: PaymentStatus.PENDING,
        notesForTreasury: 'Payment matched, awaiting final approval',
        expectedDate: new Date('2024-06-22'),
        actualDateReceived: new Date('2024-06-22T11:20:00'),
        processedBy: null,
      },
      {
        id: 'wp20',
        dba: 'Software Development Inc',
        cid: 'SD-2024-020',
        expectedAmount: 19500.00,
        actualAmount: 19500.00,
        ptp: true,
        status: PaymentStatus.PENDING,
        notesForTreasury: 'Software license payment pending review',
        expectedDate: new Date('2024-07-02'),
        actualDateReceived: new Date('2024-07-02T09:00:00'),
        processedBy: null,
      },
      {
        id: 'wp21',
        dba: 'Transportation Services',
        cid: 'TS-2024-025',
        expectedAmount: 4200.00,
        actualAmount: 4200.00,
        ptp: false,
        status: PaymentStatus.PENDING,
        notesForTreasury: 'Fleet payment awaiting verification',
        expectedDate: new Date('2024-07-03'),
        actualDateReceived: new Date('2024-07-03T15:30:00'),
        processedBy: null,
      },

      // Cleared payments (3 records)
      {
        id: 'wp22',
        dba: 'AutoDealer Network',
        cid: 'AD-2024-012',
        expectedAmount: 9500.00,
        actualAmount: 9500.00,
        ptp: true,
        status: PaymentStatus.CLEARED,
        notesForTreasury: 'Processed successfully',
        expectedDate: new Date('2024-06-18'),
        actualDateReceived: new Date('2024-06-18T13:10:00'),
        processedBy: 'treasury_user_1',
      },
      {
        id: 'wp23',
        dba: 'Legal Services Partnership',
        cid: 'LS-2024-014',
        expectedAmount: 14500.00,
        actualAmount: 14500.00,
        ptp: true,
        status: PaymentStatus.CLEARED,
        notesForTreasury: 'Legal fees payment cleared',
        expectedDate: new Date('2024-06-24'),
        actualDateReceived: new Date('2024-06-24T10:00:00'),
        processedBy: 'treasury_user_2',
      },
      {
        id: 'wp24',
        dba: 'Marketing Solutions Group',
        cid: 'MS-2024-018',
        expectedAmount: 2850.00,
        actualAmount: 2850.00,
        ptp: false,
        status: PaymentStatus.CLEARED,
        notesForTreasury: 'Advertising campaign payment processed',
        expectedDate: new Date('2024-06-26'),
        actualDateReceived: new Date('2024-06-26T16:45:00'),
        processedBy: 'treasury_user_3',
      },

      // Reverted payment (1 record)
      {
        id: 'wp25',
        dba: 'Reverted Transaction Example',
        cid: 'RT-2024-001',
        expectedAmount: 5000.00,
        actualAmount: 5000.00,
        ptp: true,
        status: PaymentStatus.REVERTED,
        notesForTreasury: 'Payment was manually posted but later reverted due to duplicate processing',
        expectedDate: new Date('2024-06-23'),
        actualDateReceived: new Date('2024-06-23T09:30:00'),
        processedBy: 'treasury_user_2',
        isReverted: true,
        originalStatus: PaymentStatus.MANUAL_POSTED,
        revertedAt: new Date('2024-06-24T14:20:00'),
        revertedBy: 'treasury_supervisor_1',
        backendTransactionId: 'GL-1719001800000-XYZ456GHI',
      },
    ]
  })

  // Create multi-contract allocation examples
  await prisma.contractAllocation.createMany({
    data: [
      // Multi-contract allocation for Restaurant Chain Holdings (wp7)
      {
        wirePaymentId: 'wp7',
        contractId: 'RC-2024-011-A',
        amount: 8250.00,
        percentage: 50.0,
        glAccount: '1100-ACCOUNTS-RECEIVABLE-A',
        transactionId: 'GL-1719398200000-FRAN001XYZ-A',
      },
      {
        wirePaymentId: 'wp7',
        contractId: 'RC-2024-011-B',
        amount: 8250.00,
        percentage: 50.0,
        glAccount: '1100-ACCOUNTS-RECEIVABLE-B',
        transactionId: 'GL-1719398200000-FRAN001XYZ-B',
      },
      // Multi-contract allocation for Financial Services Corp (wp8)
      {
        wirePaymentId: 'wp8',
        contractId: 'FS-2024-017-MAIN',
        amount: 18600.00,
        percentage: 60.0,
        glAccount: '1100-ACCOUNTS-RECEIVABLE-MAIN',
        transactionId: 'GL-1719672900000-COMPLEX789-MAIN',
      },
      {
        wirePaymentId: 'wp8',
        contractId: 'FS-2024-017-SUB1',
        amount: 9300.00,
        percentage: 30.0,
        glAccount: '1100-ACCOUNTS-RECEIVABLE-SUB1',
        transactionId: 'GL-1719672900000-COMPLEX789-SUB1',
      },
      {
        wirePaymentId: 'wp8',
        contractId: 'FS-2024-017-SUB2',
        amount: 3100.00,
        percentage: 10.0,
        glAccount: '1100-ACCOUNTS-RECEIVABLE-SUB2',
        transactionId: 'GL-1719672900000-COMPLEX789-SUB2',
      },
    ]
  })

  // Create comprehensive audit logs for all payment scenarios
  const auditLogs = await prisma.auditLog.createMany({
    data: [
      // Auto-cleared payments (wp1-wp5)
      {
        wirePaymentId: 'wp1',
        userId: 'system_auto',
        action: 'AUTO_CLEARED',
        previousValue: 'PENDING',
        newValue: 'AUTO_CLEARED',
        details: 'Auto-cleared: Actual amount ($15000.00) matches expected amount ($15000.00)',
        timestamp: new Date('2024-06-20T14:35:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp2',
        userId: 'system_auto',
        action: 'AUTO_CLEARED',
        previousValue: 'PENDING',
        newValue: 'AUTO_CLEARED',
        details: 'Auto-cleared: Actual amount ($22000.00) matches expected amount ($22000.00)',
        timestamp: new Date('2024-06-25T12:05:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp3',
        userId: 'system_auto',
        action: 'AUTO_CLEARED',
        previousValue: 'PENDING',
        newValue: 'AUTO_CLEARED',
        details: 'Auto-cleared: Actual amount ($3750.00) matches expected amount ($3750.00)',
        timestamp: new Date('2024-06-28T09:20:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp4',
        userId: 'system_auto',
        action: 'AUTO_CLEARED',
        previousValue: 'PENDING',
        newValue: 'AUTO_CLEARED',
        details: 'Auto-cleared: Actual amount ($45000.00) matches expected amount ($45000.00)',
        timestamp: new Date('2024-06-30T16:25:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp5',
        userId: 'system_auto',
        action: 'AUTO_CLEARED',
        previousValue: 'PENDING',
        newValue: 'AUTO_CLEARED',
        details: 'Auto-cleared: Actual amount ($8900.00) matches expected amount ($8900.00)',
        timestamp: new Date('2024-07-01T08:35:00'),
        isRevertible: true,
      },

      // Manual posted payments (wp6-wp9)
      {
        wirePaymentId: 'wp6',
        userId: 'treasury_user_3',
        action: 'MANUAL_POST',
        previousValue: null,
        newValue: 'EC-2024-005',
        details: 'Manual posting completed - Contract ID: EC-2024-005, GL Account: 1100-ACCOUNTS-RECEIVABLE, Transaction ID: GL-1719002700000-ABC123DEF',
        timestamp: new Date('2024-06-21T15:50:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp6',
        userId: 'treasury_user_3',
        action: 'STATUS_CHANGED',
        previousValue: 'REVIEW_REQUIRED',
        newValue: 'MANUAL_POSTED',
        details: 'Status updated after successful manual posting',
        timestamp: new Date('2024-06-21T15:50:01'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp6',
        userId: 'treasury_user_3',
        action: 'BACKEND_POST_SUCCESS',
        previousValue: null,
        newValue: 'GL-1719002700000-ABC123DEF',
        details: 'Successfully posted to backend GL system. Transaction ID: GL-1719002700000-ABC123DEF',
        timestamp: new Date('2024-06-21T15:50:02'),
        isRevertible: true,
      },
      // wp7 - Multi-contract allocation
      {
        wirePaymentId: 'wp7',
        userId: 'treasury_user_1',
        action: 'MANUAL_POST',
        previousValue: null,
        newValue: 'RC-2024-011',
        details: 'Multi-contract allocation: RC-2024-011-A (50% - $8250.00), RC-2024-011-B (50% - $8250.00)',
        timestamp: new Date('2024-06-26T11:35:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp7',
        userId: 'treasury_user_1',
        action: 'STATUS_CHANGED',
        previousValue: 'REVIEW_REQUIRED',
        newValue: 'MANUAL_POSTED',
        details: 'Status updated after successful multi-contract posting',
        timestamp: new Date('2024-06-26T11:35:01'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp7',
        userId: 'treasury_user_1',
        action: 'BACKEND_POST_SUCCESS',
        previousValue: null,
        newValue: 'GL-1719398200000-FRAN001XYZ',
        details: 'Multi-contract posting successful - Multiple GL transactions created',
        timestamp: new Date('2024-06-26T11:35:02'),
        isRevertible: true,
      },
      // wp8 - Complex multi-contract allocation
      {
        wirePaymentId: 'wp8',
        userId: 'treasury_supervisor_1',
        action: 'MANUAL_POST',
        previousValue: null,
        newValue: 'FS-2024-017',
        details: 'Complex multi-contract allocation: MAIN (60% - $18600.00), SUB1 (30% - $9300.00), SUB2 (10% - $3100.00)',
        timestamp: new Date('2024-06-29T14:20:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp8',
        userId: 'treasury_supervisor_1',
        action: 'STATUS_CHANGED',
        previousValue: 'REVIEW_REQUIRED',
        newValue: 'MANUAL_POSTED',
        details: 'Status updated after complex transaction processing',
        timestamp: new Date('2024-06-29T14:20:01'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp8',
        userId: 'treasury_supervisor_1',
        action: 'BACKEND_POST_SUCCESS',
        previousValue: null,
        newValue: 'GL-1719672900000-COMPLEX789',
        details: 'Complex transaction posted successfully to multiple GL accounts',
        timestamp: new Date('2024-06-29T14:20:02'),
        isRevertible: true,
      },
      // wp9 - Healthcare payment
      {
        wirePaymentId: 'wp9',
        userId: 'treasury_user_2',
        action: 'MANUAL_POST',
        previousValue: null,
        newValue: 'HT-2024-013',
        details: 'Manual posting completed - Contract ID: HT-2024-013, GL Account: 1100-ACCOUNTS-RECEIVABLE, Transaction ID: GL-1719918300000-MEDTECH456',
        timestamp: new Date('2024-07-02T10:50:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp9',
        userId: 'treasury_user_2',
        action: 'STATUS_CHANGED',
        previousValue: 'REVIEW_REQUIRED',
        newValue: 'MANUAL_POSTED',
        details: 'Healthcare payment processed successfully',
        timestamp: new Date('2024-07-02T10:50:01'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp9',
        userId: 'treasury_user_2',
        action: 'BACKEND_POST_SUCCESS',
        previousValue: null,
        newValue: 'GL-1719918300000-MEDTECH456',
        details: 'Medical equipment payment posted to GL system',
        timestamp: new Date('2024-07-02T10:50:02'),
        isRevertible: true,
      },

      // Uncleared payments investigations (wp15-wp18)
      {
        wirePaymentId: 'wp15',
        userId: 'treasury_user_2',
        action: 'STATUS_CHANGED',
        previousValue: 'PENDING',
        newValue: 'UNCLEARED',
        details: 'Amount mismatch detected - $50 shortage',
        timestamp: new Date('2024-06-19T16:50:00'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp15',
        userId: 'treasury_user_2',
        action: 'NOTES_UPDATED',
        previousValue: '',
        newValue: 'Amount mismatch - $50 short, investigating',
        details: 'Added investigation notes for shortage',
        timestamp: new Date('2024-06-19T16:52:00'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp16',
        userId: 'treasury_user_2',
        action: 'STATUS_CHANGED',
        previousValue: 'PENDING',
        newValue: 'UNCLEARED',
        details: 'Overpayment detected - $100 excess',
        timestamp: new Date('2024-06-20T10:30:00'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp16',
        userId: 'treasury_user_2',
        action: 'NOTES_UPDATED',
        previousValue: '',
        newValue: 'Overpayment of $100, contacting merchant',
        details: 'Merchant contact initiated for overpayment resolution',
        timestamp: new Date('2024-06-20T10:32:00'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp17',
        userId: 'treasury_user_1',
        action: 'STATUS_CHANGED',
        previousValue: 'PENDING',
        newValue: 'UNCLEARED',
        details: 'Significant underpayment detected - $500 shortage',
        timestamp: new Date('2024-06-28T12:20:00'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp17',
        userId: 'treasury_user_1',
        action: 'NOTES_UPDATED',
        previousValue: '',
        newValue: 'Significant underpayment of $500, dispute initiated',
        details: 'Formal dispute process started',
        timestamp: new Date('2024-06-28T12:22:00'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp18',
        userId: 'treasury_user_3',
        action: 'STATUS_CHANGED',
        previousValue: 'PENDING',
        newValue: 'UNCLEARED',
        details: 'Overpayment investigation required',
        timestamp: new Date('2024-06-30T14:35:00'),
        isRevertible: false,
      },

      // Cleared payments processing (wp22-wp24)
      {
        wirePaymentId: 'wp22',
        userId: 'treasury_user_1',
        action: 'STATUS_CHANGED',
        previousValue: 'PENDING',
        newValue: 'CLEARED',
        details: 'Payment processed successfully',
        timestamp: new Date('2024-06-18T13:15:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp23',
        userId: 'treasury_user_2',
        action: 'STATUS_CHANGED',
        previousValue: 'PENDING',
        newValue: 'CLEARED',
        details: 'Legal services payment cleared',
        timestamp: new Date('2024-06-24T10:05:00'),
        isRevertible: true,
      },
      {
        wirePaymentId: 'wp24',
        userId: 'treasury_user_3',
        action: 'STATUS_CHANGED',
        previousValue: 'PENDING',
        newValue: 'CLEARED',
        details: 'Marketing payment processed',
        timestamp: new Date('2024-06-26T16:50:00'),
        isRevertible: true,
      },

      // Reverted payment example (wp25 - original manual posting)
      {
        wirePaymentId: 'wp25',
        userId: 'treasury_user_2',
        action: 'MANUAL_POST',
        previousValue: null,
        newValue: 'RT-2024-001',
        details: 'Manual posting completed - Contract ID: RT-2024-001, GL Account: 1100-ACCOUNTS-RECEIVABLE, Transaction ID: GL-1719001800000-XYZ456GHI',
        timestamp: new Date('2024-06-23T10:15:00'),
        isRevertible: true,
        revertedAt: new Date('2024-06-24T14:20:00'),
        revertedBy: 'treasury_supervisor_1',
      },
      {
        wirePaymentId: 'wp25',
        userId: 'treasury_user_2',
        action: 'BACKEND_POST_SUCCESS',
        previousValue: null,
        newValue: 'GL-1719001800000-XYZ456GHI',
        details: 'Successfully posted to backend GL system. Transaction ID: GL-1719001800000-XYZ456GHI',
        timestamp: new Date('2024-06-23T10:15:02'),
        isRevertible: true,
        revertedAt: new Date('2024-06-24T14:20:00'),
        revertedBy: 'treasury_supervisor_1',
      },
      {
        wirePaymentId: 'wp25',
        userId: 'treasury_user_2',
        action: 'STATUS_CHANGED',
        previousValue: 'REVIEW_REQUIRED',
        newValue: 'MANUAL_POSTED',
        details: 'Status updated after successful manual posting',
        timestamp: new Date('2024-06-23T10:15:01'),
        isRevertible: false,
      },
      // Reversal actions for wp25
      {
        wirePaymentId: 'wp25',
        userId: 'treasury_supervisor_1',
        action: 'REVERTED',
        previousValue: 'MANUAL_POSTED',
        newValue: 'REVERTED',
        details: 'Reverted action: MANUAL_POST. Reason: Duplicate processing detected',
        timestamp: new Date('2024-06-24T14:20:00'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp25',
        userId: 'treasury_supervisor_1',
        action: 'STATUS_CHANGED',
        previousValue: 'MANUAL_POSTED',
        newValue: 'REVERTED',
        details: 'Status changed due to reversal of MANUAL_POST',
        timestamp: new Date('2024-06-24T14:20:01'),
        isRevertible: false,
      },
      {
        wirePaymentId: 'wp25',
        userId: 'treasury_supervisor_1',
        action: 'BACKEND_REVERSAL_SUCCESS',
        previousValue: 'GL-1719001800000-XYZ456GHI',
        newValue: 'REV-1719334800000-ZYX987CBA',
        details: 'Backend transaction reversed. Original ID: GL-1719001800000-XYZ456GHI, Reversal ID: REV-1719334800000-ZYX987CBA',
        timestamp: new Date('2024-06-24T14:20:02'),
        isRevertible: false,
      },
    ]
  })

  console.log(`✅ Seeded ${wirePayments.count} comprehensive wire payments across all statuses`)
  console.log(`✅ Seeded multi-contract allocation examples`)
  console.log(`✅ Seeded ${auditLogs.count} detailed audit log entries`)
  console.log('🌱 TreasuryStream database seed completed successfully!')
}

main()
  .catch((e) => {
    console.error('❌ Seed failed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
